name: Build & Push both services to ACR (monorepo)

on:
  push:
    branches: [ "main" ]
    paths:
      - "users-api/**"
      - "products-api/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - service: users-api
            context: ./users-api
            image: users-api
          - service: products-api
            context: ./products-api
            image: products-api

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üîê Azure Login (Service Principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üîë Login to Azure Container Registry (ACR)
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: üè∑Ô∏è Set version tag (short commit SHA)
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: üßæ Debug: verify Docker context
        run: |
          echo "Building service: ${{ matrix.service }}"
          echo "Context directory: ${{ matrix.context }}"
          ls -la "${{ matrix.context }}"

      - name: üèóÔ∏è Build & Push ${{ matrix.service }} to ACR
        run: |
          echo "Starting Docker Buildx..."
          docker buildx create --use --name multiarchbuilder || docker buildx use multiarchbuilder
          docker buildx inspect --bootstrap

          echo "Building image for ${{ matrix.service }}..."
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.image }}:latest \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.image }}:${{ steps.vars.outputs.TAG }} \
            "${{ matrix.context }}" \
            --push
