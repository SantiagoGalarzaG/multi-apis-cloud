name: üöÄ Build and Deploy to ACR

on:
  push:
    branches:
      - main

env:
  REGISTRY: yourregistry.azurecr.io
  IMAGE_NAME: your-image-name

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: users-api
            context: .
          # Puedes agregar m√°s servicios si los tienes:
          # - service: orders-api
          #   context: ./orders-api

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: üß∞ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: üè∑Ô∏è Set image tag
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: üß© Debug: verify Docker context
        run: |
          echo "Building service: ${{ matrix.service }}"
          echo "Context directory: ${{ matrix.context }}"
          ls -la "${{ matrix.context }}"

      - name: üê≥ Build & Push ${{ matrix.service }} to ACR
        run: |
          echo "Starting Docker Buildx..."
          docker buildx create --use --name multiarchebuilder || docker buildx use multiarchebuilder
          docker buildx inspect --bootstrap

          echo "Building and pushing image..."
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${{ env.REGISTRY }}/${{ matrix.service }}:${{ env.TAG }} \
            -t ${{ env.REGISTRY }}/${{ matrix.service }}:latest \
            ${{ matrix.context }} \
            --push
