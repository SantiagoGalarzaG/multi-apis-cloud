name: Build & Push both services to ACR (monorepo)

on:
  push:
    branches: [ "main" ]
    paths:
      - "users-api/**"
      - "products-api/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - service: users-api
            context: ./users-api
            image: users-api
          - service: products-api
            context: ./products-api
            image: products-api

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üß∞ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Log in to Azure Container Registry (ACR)
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: üè∑Ô∏è Set version tag (short commit SHA)
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: üßæ Debug: verify Docker context
        run: |
          echo "Service: ${{ matrix.service }}"
          echo "Context: ${{ matrix.context }}"
          echo "Contents of context:"
          ls -la "${{ matrix.context }}"

      - name: üèóÔ∏è Build & Push ${{ matrix.service }} to ACR
        run: |
          echo "üõ†Ô∏è Building image for ${{ matrix.service }} using context: '${{ matrix.context }}'"
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.image }}:latest \
            -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.image }}:${{ steps.vars.outputs.TAG }} \
            "${{ matrix.context }}" \
            --push
